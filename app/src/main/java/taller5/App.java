/*
 * This source file was generated by the Gradle 'init' task
 */
package taller;

import java.text.*;
import java.util.*;

public class App {

    public static void main(String[] args) {

        try {
            Scanner scanner = new Scanner(System.in);

            // Punto 1: Contador de intentos para hallar un número aleatorio.
            System.out.println("Ingrese un número entero positivo entre 1000 y 9999:");
            int numero = scanner.nextInt();
            contarIntentos(numero);

            // Punto 2: Simular ventas.
            String ventas = simularVentas();
            System.out.println(ventas);

            // Punto 3: Calcular empaques.
            System.out.println("Ingrese el número de bombillas a empacar:");
            int bombillas = scanner.nextInt();
            String resultadoEmpaque = calcularEmpaque(bombillas);
            System.out.println(resultadoEmpaque);

            // Punto 4: Simular juego 21.
            System.out.println("Ingrese la cantidad de jugadores (entre 1 y 6):");
            int jugadores = scanner.nextInt();
            jugar21(jugadores);

            scanner.close();

        } catch (Exception e) {
            System.out.println("Ocurrió un error: " + e.getMessage());
        }
    }

    /*
     * 1. Desarrolle un algoritmo e impleméntelo en Java que: le pida al usuario un
     * número entero positivo entre 1000 y 9999. En un ciclo genere números de
     * manera aleatoria y cuente los intentos que hizo antes de hallar el número
     * exactamente.
     */
    public static void contarIntentos(int numero) {
        try {
            if (numero < 1000 || numero > 9999) {
                System.out.println("Número fuera de rango.");
                return;
            }

            Random random = new Random();
            int intentos = 0;
            int generado = 0;

            while (generado != numero) {
                generado = 1000 + random.nextInt(9000); // Genera número aleatorio entre 1000 y 9999
                intentos++;
            }

            System.out.println("Número encontrado después de " + intentos + " intentos.");
        } catch (Exception e) {
            System.out.println("Error en contarIntentos: " + e.getMessage());
        }
    }

    /*
     * 2. Se requiere una función en Java que simule las ventas de tres años para un
     * almacén. Para cada año, deberá generar un aleatorio para cada mes hasta
     * completar los 12 meses. La función se llamará Simular_ventas, y debe retornar
     * un String al final que muestre las ventas de cada año.
     */
    public static String simularVentas() {
        try {
            DecimalFormat form_pesos = new DecimalFormat("$#,###.00");
            Random random = new Random();
            String resultado = "";

            for (int año = 1; año <= 3; año++) {
                double totalAnual = 0;
                resultado += "Año " + año + "\n";

                for (int mes = 1; mes <= 12; mes++) {
                    double ventaMes = 500000 + random.nextDouble() * 9500000; // Ventas aleatorias entre 500,000 y 10,000,000
                    resultado += "Ventas Mes " + mes + ": " + form_pesos.format(ventaMes) + "\n";
                    totalAnual += ventaMes;
                }

                resultado += "Total ventas Año " + año + ": " + form_pesos.format(totalAnual) + "\n\n";
            }

            return resultado;
        } catch (Exception e) {
            System.out.println("Error en simularVentas: " + e.getMessage());
            return "";
        }
    }

    /*
     * 3. En una fábrica se tiene el siguiente patrón de empaque: En una estiba (o
     * pallet) caben 16 cajas y en cada caja, caben 30 bombillas. Desarrolle una
     * función que se llame: Calcular_empaque que: reciba como argumento la cantidad
     * de bombillas que se deben empacar y a partir de allí: calcule cuántas cajas
     * necesita, cuántas estibas o pallets necesita.
     */
    public static String calcularEmpaque(int bombillas) {
        try {
            int bombillasPorCaja = 30;
            int cajasPorPallet = 16;

            int cajasNecesarias = (bombillas + bombillasPorCaja - 1) / bombillasPorCaja; // Redondea hacia arriba
            int palletsNecesarios = (cajasNecesarias + cajasPorPallet - 1) / cajasPorPallet; // Redondea hacia arriba
            int bombillasSinEmpacar = bombillas % bombillasPorCaja;

            String resultado = "Para " + bombillas + " bombillas, se necesitan " + cajasNecesarias + " cajas y " + palletsNecesarios + " pallets.";
            resultado += " Se quedan " + bombillasSinEmpacar + " bombillas sin empacar.\n";

            int cajaNumero = 1;
            for (int pallet = 1; pallet <= palletsNecesarios; pallet++) {
                resultado += "Pallet " + pallet + " --> ";
                for (int caja = 1; caja <= cajasPorPallet && cajaNumero <= cajasNecesarias; caja++) {
                    resultado += "Caja" + cajaNumero;
                    if (caja < cajasPorPallet && cajaNumero < cajasNecesarias) {
                        resultado += ", ";
                    }
                    cajaNumero++;
                }
                resultado += "\n";
            }

            return resultado;
        } catch (Exception e) {
            System.out.println("Error en calcularEmpaque: " + e.getMessage());
            return "";
        }
    }

    /*
     * 4. En un juego, cada jugador tiene 3 intentos para sacar cartas de una baraja.
     * Las cartas van numeradas entre 1 y 10. Una función Jugar_21, deberá simular
     * el juego para una cantidad de usuarios que enviará el usuario desde el main
     * entre 1 y 6.
     */
    public static void jugar21(int jugadores) {
        try {
            if (jugadores < 1 || jugadores > 6) {
                System.out.println("Número de jugadores fuera de rango.");
                return;
            }

            Random random = new Random();

            for (int jugador = 1; jugador <= jugadores; jugador++) {
                int puntos = 0;

                for (int i = 0; i < 3; i++) {
                    int carta = 1 + random.nextInt(10); // Genera una carta entre 1 y 10
                    puntos += carta;
                }

                String resultado = "Jugador " + jugador + ", puntos " + puntos + " --> ";
                if (puntos == 21) {
                    resultado += "juego perfecto";
                } else if (puntos > 21) {
                    resultado += "se pasó";
                } else {
                    resultado += "faltaron puntos";
                }
                System.out.println(resultado);
            }
        } catch (Exception e) {
            System.out.println("Error en jugar21: " + e.getMessage());
        }
    }
}
